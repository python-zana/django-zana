# Generated by Django 4.1.7 on 2023-02-20 07:40

from decimal import Decimal

import django.db.models.aggregates
import django.db.models.expressions
import django.db.models.functions.math
import example.aliases.models
import zana.django.models
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("aliases", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="author",
            name="income",
            field=zana.django.models.AliasField(
                expression=example.aliases.models.Author.get_income,
                internal=models.DecimalField(decimal_places=2, max_digits=20),
            ),
        ),
        migrations.AddField(
            model_name="author",
            name="num_books",
            field=zana.django.models.AliasField(
                expression=django.db.models.aggregates.Count("books__pk"),
                internal=models.IntegerField(),
            ),
        ),
        migrations.AddField(
            model_name="author",
            name="publishers",
            field=zana.django.models.AliasField(
                expression=example.aliases.models.Author.get_publishers_annotation,
                getter=example.aliases.models.Author.get_publishers,
            ),
        ),
        migrations.AddField(
            model_name="author",
            name="rating",
            field=zana.django.models.AliasField(
                expression=django.db.models.functions.math.Ceil(
                    django.db.models.aggregates.Avg("books__rating")
                ),
                internal=models.IntegerField(
                    choices=[
                        (0, "None"),
                        (1, "Very Bad"),
                        (2, "Bad"),
                        (3, "Average"),
                        (4, "Good"),
                        (5, "Very Good"),
                    ],
                    default=example.aliases.models.Rating["NONE"],
                ),
                select=True,
            ),
        ),
        migrations.AddField(
            model_name="author",
            name="version",
            field=zana.django.models.AliasField(expression="updated_at"),
        ),
        migrations.AddField(
            model_name="book",
            name="chapters",
            field=zana.django.models.AliasField(
                expression=models.F("data__content__chapters"),
                setter=True,
                source=zana.django.models.Chain(
                    zana.django.models.Attr("data"),
                    zana.django.models.Item("content"),
                    zana.django.models.Item("chapters"),
                ),
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="commission",
            field=zana.django.models.AliasField(
                cache=False,
                expression=django.db.models.expressions.CombinedExpression(
                    models.F("price"), "*", models.F("publisher__commission")
                ),
                getter=example.aliases.models.Book.get_commission,
                internal=models.DecimalField(decimal_places=2, max_digits=20),
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="commission_income",
            field=zana.django.models.AliasField(
                cache=False,
                expression=django.db.models.expressions.CombinedExpression(
                    models.F("commission"), "*", models.F("num_sold")
                ),
                getter=example.aliases.models.Book.get_commission_income,
                internal=models.DecimalField(decimal_places=2, max_digits=20),
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="date",
            field=zana.django.models.AliasField(
                defer=True,
                expression="published_on__date",
                source=zana.django.models.Chain(
                    zana.django.models.Attr("published_on"),
                    zana.django.models.Attr("date"),
                    zana.django.models.Call(),
                ),
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="desc_c",
            field=zana.django.models.AliasField(
                expression=models.F("data__description"),
                internal=models.CharField(),
                setter=True,
                source=zana.django.models.Chain(
                    zana.django.models.Attr("data"),
                    zana.django.models.Item("description"),
                ),
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="desc_r",
            field=zana.django.models.AliasField(
                expression=models.F("data__description"),
                internal=models.CharField(default=""),
                setter=True,
                source=zana.django.models.Chain(
                    zana.django.models.Attr("data"),
                    zana.django.models.Item("description"),
                ),
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="desc_s",
            field=zana.django.models.AliasField(
                expression=models.F("data__description"),
                internal=models.CharField(),
                setter=True,
                source=zana.django.models.Chain(
                    zana.django.models.Attr("data"),
                    zana.django.models.Item("description"),
                ),
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="gross_income",
            field=zana.django.models.AliasField(
                cache=False,
                expression=django.db.models.expressions.CombinedExpression(
                    models.F("price"), "*", models.F("num_sold")
                ),
                getter=example.aliases.models.Book.get_gross_income,
                internal=models.DecimalField(decimal_places=2, max_digits=20),
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="is_best_seller",
            field=zana.django.models.AliasField(
                expression=models.F("data__is_best_seller"),
                internal=models.BooleanField(),
                source=zana.django.models.Chain(
                    zana.django.models.Attr("data"),
                    zana.django.models.Item("is_best_seller"),
                ),
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="is_short",
            field=zana.django.models.AliasField(
                expression=models.Case(
                    models.When(num_pages__lte=models.Value(500), then=models.Value(True)),
                    default=models.Value(False),
                ),
                internal=models.BooleanField(),
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="net_income",
            field=zana.django.models.AliasField(
                cache=False,
                expression=django.db.models.expressions.CombinedExpression(
                    models.F("net_price"), "*", models.F("num_sold")
                ),
                getter=example.aliases.models.Book.get_net_income,
                internal=models.DecimalField(decimal_places=2, max_digits=20),
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="net_price",
            field=zana.django.models.AliasField(
                cache=False,
                expression=django.db.models.expressions.CombinedExpression(
                    models.F("price"), "-", models.F("commission")
                ),
                getter=example.aliases.models.Book.get_net_price,
                internal=models.DecimalField(decimal_places=2, max_digits=20),
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="num_pages",
            field=zana.django.models.AliasField(
                cast=True,
                deleter=True,
                expression=models.F("data__content__pages"),
                internal=models.IntegerField(),
                setter=True,
                source=zana.django.models.Chain(
                    zana.django.models.Attr("data"),
                    zana.django.models.Item("content"),
                    zana.django.models.Item("pages"),
                ),
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="published_by",
            field=zana.django.models.AliasField(
                deleter=True,
                expression=models.F("publisher__name"),
                setter=True,
                source=zana.django.models.Chain(
                    zana.django.models.Attr("publisher"),
                    zana.django.models.Attr("name"),
                ),
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="tag",
            field=zana.django.models.AliasField(
                deleter=True,
                expression=models.F("data__tags__0"),
                internal=models.TextField(),
                json=True,
                setter=True,
                source=zana.django.models.Chain(
                    zana.django.models.Attr("data"),
                    zana.django.models.Item("tags"),
                    zana.django.models.Item(0),
                ),
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="tags",
            field=zana.django.models.AliasField(
                expression="data__tags",
                setter=True,
                source=zana.django.models.Chain(
                    zana.django.models.Attr("data"),
                    zana.django.models.Item("tags"),
                    zana.django.models.Slice((None, 2, None)),
                ),
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="topics",
            field=zana.django.models.AliasField(
                expression=models.F("data__content__chapters__0__topics"),
                setter=True,
                source=zana.django.models.Chain(
                    zana.django.models.Attr("data"),
                    zana.django.models.Item("content"),
                    zana.django.models.Item("chapters"),
                    zana.django.models.Item(0),
                    zana.django.models.Item("topics"),
                ),
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="version",
            field=zana.django.models.AliasField(expression="updated_at"),
        ),
        migrations.AddField(
            model_name="book",
            name="year",
            field=zana.django.models.AliasField(
                expression=models.F("published_on__year"),
                internal=models.IntegerField(),
                source=zana.django.models.Chain(
                    zana.django.models.Attr("published_on"),
                    zana.django.models.Attr("year"),
                ),
            ),
        ),
        migrations.AddField(
            model_name="publisher",
            name="income",
            field=zana.django.models.AliasField(
                expression=example.aliases.models.Publisher.get_income
            ),
        ),
        migrations.AddField(
            model_name="publisher",
            name="num_books",
            field=zana.django.models.AliasField(
                expression=django.db.models.aggregates.Count("books__pk"),
                internal=models.IntegerField(),
            ),
        ),
        migrations.AddField(
            model_name="publisher",
            name="rating",
            field=zana.django.models.AliasField(
                cast=True,
                expression=django.db.models.aggregates.Avg("books__rating"),
                internal=models.DecimalField(
                    decimal_places=2, default=Decimal("0.00"), max_digits=20
                ),
                select=True,
            ),
        ),
        migrations.AddField(
            model_name="publisher",
            name="version",
            field=zana.django.models.AliasField(expression="updated_at"),
        ),
        migrations.AlterField(
            model_name="book",
            name="rating",
            field=models.SmallIntegerField(
                choices=[
                    (0, "None"),
                    (1, "Very Bad"),
                    (2, "Bad"),
                    (3, "Average"),
                    (4, "Good"),
                    (5, "Very Good"),
                ],
                null=True,
            ),
        ),
    ]
